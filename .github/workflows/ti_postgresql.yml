name: TI - Postgresql

on:
  workflow_call:
    inputs:
      id:
        required: true
        type: string
      vm_region:
        required: true
        type: string
      vm_count:
        required: true
        type: string
      vm_type:
        required: true
        type: string
      vm_image:
        required: true
        type: string
      vm_tags:
        required: true
        type: string
      vm_authorized_users:
        required: true
        type: string
      postgresql_type:
        required: true
        type: string
    secrets:
      PRIVATECIRCLE_CI_GITHUB_USER_PAT:
        required: true

jobs:
  create-pr:
    name: Create Pull Request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PRIVATECIRCLE_CI_GITHUB_USER_PAT }}

      - name: Set deployId variable
        id: vars
        run: echo "::set-output name=deployID::psql-${{ github.event.inputs.id }}-$(openssl rand -hex 32 | cut -c-3)"

      - name: Create commit - Postgresql Standalone
        if: ${{ github.event.inputs.postgresql_type == 'Standalone' }}
        run: |
          dest_dir=${{ steps.vars.outputs.deployID }};
          (
            cd terraform || exit 1;
            cp -rv ../samples/postgresql-standalone $dest_dir;
            terragrunt_template=../samples/terragrunt.hcl.subdir;
            dest_file="$dest_dir/terragrunt.hcl"
            test -f "$terragrunt_template" && cp -v "$terragrunt_template" "$dest_file"
            sed -i 's+LINODE_REGION+${{github.event.inputs.vm_region}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+LINODE_IMAGE+${{github.event.inputs.vm_image}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+LINODE_TYPE+${{github.event.inputs.vm_type}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+LINODE_LABEL+${{github.event.inputs.id}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+LINODE_TAGS+${{github.event.inputs.vm_tags}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+LINODE_COUNT+${{github.event.inputs.vm_count}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+AUTHORIZED_USERS+${{github.event.inputs.vm_authorized_users}}+g' $dest_dir/.auto.tfvars.json
          )

      - name: Create commit - Postgresql Replicaset
        if: ${{ github.event.inputs.postgresql_type == 'Replicaset' }}
        run: |
          dest_dir=${{ steps.vars.outputs.deployID }};
          (
            cd terraform || exit 1;
            cp -rv ../samples/postgresql-replicaset $dest_dir;
            terragrunt_template=../samples/terragrunt.hcl.subdir;
            dest_file="$dest_dir/terragrunt.hcl"
            test -f "$terragrunt_template" && cp -v "$terragrunt_template" "$dest_file"
            sed -i 's+LINODE_REGION+${{github.event.inputs.vm_region}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+LINODE_IMAGE+${{github.event.inputs.vm_image}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+VM_TYPE+${{github.event.inputs.vm_type}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+LINODE_LABEL+${{github.event.inputs.id}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+LINODE_TAGS+${{github.event.inputs.vm_tags}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+VM_COUNT+${{github.event.inputs.vm_count}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+AUTHORIZED_USERS+${{github.event.inputs.vm_authorized_users}}+g' $dest_dir/.auto.tfvars.json
            sed -i 's+CLUSTERNAME+${{github.event.inputs.id}}+g' $dest_dir/inventory.tmpl
          )

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PRIVATECIRCLE_CI_GITHUB_USER_PAT }}
          author: privatecircle-ci <privatecircle-ci@users.noreply.github.com>
          title: Setup TI - ${{ steps.vars.outputs.deployID }}
          branch: ${{ steps.vars.outputs.deployID }}
          commit-message: Setup TI - ${{ steps.vars.outputs.deployID }}
          body: |
            **Github Action has created this PR to automatically create a transient infra for `${{ steps.vars.outputs.deployID }}`**

            - Contains a Terraform plan to setup `${{ steps.vars.outputs.deployID }}`

            Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
