name: CI

on:
  workflow_call:
    secrets:
      TF_BACKEND_AWS_ACCESS_KEY_ID:
        required: true
      TF_BACKEND_AWS_SECRET_ACCESS_KEY:
        required: true
      LINODE_API_TOKEN:
        required: true
      LINODE_DEFAULT_ROOT_USER_PASSWORD:
        required: true
      ANSIBLE_SSH_PUBLIC_KEY:
        required: true
      ANSIBLE_SSH_PRIVATE_KEY:
        required: true
      PRIVATECIRCLE_CI_GITHUB_USER_PAT:
        required: true
      INFRA_ANSIBLE_VAULT_PASSWORD:
        required: true
    inputs:
      deploy_path:
        description: 'Specify a deploy path if needs to be changed. Default is "./terraform"'
        default: './terraform'
        required: false
        type: string
jobs:
  tf-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Plan
        id: tf-plan
        uses: ./infra-workflow/.github/actions/terraform_plan.yml
        with:
          user_ansible_vault_password: ${{ secrets.USER_ANSIBLE_VAULT_PASSWORD }}
          deployPath: ${{ inputs.deploy_path }}"
          aws_access_key_id: ${{ secrets.TF_BACKEND_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.TF_BACKEND_AWS_SECRET_ACCESS_KEY }}
          linode_token: ${{ secrets.LINODE_API_TOKEN }}
          root_password: ${{ secrets.LINODE_DEFAULT_ROOT_USER_PASSWORD }}
          github_token: ${{ secrets.PRIVATECIRCLE_CI_GITHUB_USER_PAT }}
          infra_ansible_vault_password: ${{ secrets.INFRA_ANSIBLE_VAULT_PASSWORD }}
          sshkey: ${{ secrets.ANSIBLE_SSH_PUBLIC_KEY }}
          ansible_ssh_private_key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}



  # tf-apply:
  #   name: Terraform Apply
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       shell: bash
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Set variables
  #       id: vars
  #       run: |
  #         echo "::set-output name=deployPath::${{ inputs.deploy_path }}"
  #         echo "::set-output name=ansible_inventory_path::$(pwd)/ansible/inventory"

  #     - name: Setup Terragrunt
  #       uses: autero1/action-terragrunt@v1.1.0
  #       with:
  #         terragrunt_version: v0.29.8

  #     - name: Checkout Terraform modules repo
  #       uses: actions/checkout@v2
  #       with:
  #         repository: private-circle/infra-tf-modules
  #         ref: main
  #         token: ${{ secrets.PRIVATECIRCLE_CI_GITHUB_USER_PAT }}
  #         path: ./infra-tf-modules

  #     - name: Terragrunt Init
  #       working-directory: ${{ steps.vars.outputs.deployPath }}
  #       id: init
  #       run: |
  #         terragrunt \
  #           run-all --terragrunt-non-interactive init \
  #           -backend-config="access_key=$AWS_ACCESS_KEY_ID" \
  #           -backend-config="secret_key=$AWS_SECRET_ACCESS_KEY";
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.TF_BACKEND_AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_BACKEND_AWS_SECRET_ACCESS_KEY }}
  #         TF_VAR_linode_token: ${{ secrets.LINODE_API_TOKEN }}
  #         TF_VAR_github_token: ${{ secrets.PRIVATECIRCLE_CI_GITHUB_USER_PAT }}

  #     - name: Terragrunt Apply
  #       working-directory: ${{ steps.vars.outputs.deployPath }}
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.TF_BACKEND_AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_BACKEND_AWS_SECRET_ACCESS_KEY }}
  #         TF_VAR_linode_token: ${{ secrets.LINODE_API_TOKEN }}
  #         TF_VAR_root_password: ${{ secrets.LINODE_DEFAULT_ROOT_USER_PASSWORD }}
  #         TF_VAR_github_token: ${{ secrets.PRIVATECIRCLE_CI_GITHUB_USER_PAT }}
  #         TF_VAR_infra_ansible_vault_password: ${{ secrets.INFRA_ANSIBLE_VAULT_PASSWORD }}
  #         TF_VAR_sshkey: ${{ secrets.ANSIBLE_SSH_PUBLIC_KEY }}
  #         TF_VAR_ansible_ssh_private_key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
  #       run: |
  #         terragrunt run-all apply \
  #           --terragrunt-non-interactive \
  #           --terragrunt-parallelism 1 \
  #           -auto-approve

  #     - name: Commit Ansible Inventory Changes
  #       uses: EndBug/add-and-commit@v7
  #       with:
  #         author_name: privatecircle-ci
  #         author_email: privatecircle-ci@users.noreply.github.com
  #         message: "Added/Updated ansible inventory"
  #         add: "ansible/inventory/"

  #     - name: Checkout Ansible Repo
  #       uses: actions/checkout@v2
  #       with:
  #         repository: private-circle/infra-ansible
  #         ref: main
  #         token: ${{ secrets.PRIVATECIRCLE_CI_GITHUB_USER_PAT }}
  #         path: ./infra-ansible

  #     - name: Run Setup Basic Ansible Playbook for all stacks
  #       id: ansible-setup-basic
  #       uses: ./infra-ansible/.github/actions/setup-basic
  #       with:
  #         ansible_inventory_path: ${{ steps.vars.outputs.ansible_inventory_path }}
  #         deploy_path: ${{ steps.vars.outputs.deployPath }}
  #         ansible_ssh_private_key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
  #         ansible_ssh_public_key: ${{ secrets.ANSIBLE_SSH_PUBLIC_KEY }}
  #         linode_instance_root_password: ${{ secrets.LINODE_DEFAULT_ROOT_USER_PASSWORD }}
  #         infra_ansible_vault_password: ${{ secrets.INFRA_ANSIBLE_VAULT_PASSWORD }}
